<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- build-file fuer Ant zum Projekt Architeuthis                     -->
<!-- Letzte Aenderung: 26.09.2004 durch Dietmar Lippold               -->

<!-- Hinweise zur Benutzung werden nach Aufruf von "ant" ohne weitere -->
<!-- Parameter ausgegeben.                                            -->

<!-- Folgende Ziele sind vorhanden:                                   -->

<!--- * compileDis    : Compiliert die Dispatcher-Dateien             -->
<!--- * compileOp     : Compiliert die Operative-Dateien              -->
<!--- * compileUser   : Compiliert die User-Dateien                   -->
<!--- * compileProbs  : Compiliert die Testproblem-Dateien            -->
<!--- * compile       : Compiliert alle java-Dateien                  -->

<!--- * dispatcherJar : Erzeugt die jar-Datei zum Dispatcher          -->
<!--- * operativeJar  : Erzeugt die jar-Datei zum Operative           -->
<!--- * userJar       : Erzeugt die jar-Datei zu den User-Dateien     -->
<!--- * problemsJar   : Erzeugt die jar-Datei zu den Testproblemen    -->
<!--- * sourceJar     : Erzeugt die jar-Datei der java-Source-Dateien -->

<!--- * dispatcherTar : Erzeugt die tar.gz-Datei zum Dispatcher       -->
<!--- * operativeTar  : Erzeugt die tar.gz-Datei zum Operative        -->
<!--- * userTar       : Erzeugt die tar.gz-Datei zu den User-Dateien  -->
<!--- * testsTar      : Erzeugt die tar.gz-Datei zu den Test-Dateien  -->
<!--- * srcTar        : Erzeugt die tar.gz-Datei vom gesamten Source  -->
<!--- * allTar        : Erzeugt alle tar.gz-Dateien                   -->

<!--- * clean         : Loescht alle von ant erzeugten Dateien        -->
<!--- * help          : Gibt eine Meldung zur Benutzung aus           -->

<project default="help">

  <!-- Festlegung der allgemeinen Verzeichnisse                       -->
  <property name="source" location="."/>
  <property name="policy" location="policy"/>
  <property name="runScripts" location="runScripts"/>
  <property name="readme" location="readme"/>
  <property name="manual" location="manual"/>
  <property name="misc" location="."/>
  <property name="build" location="build"/>
  <property name="deploy" location="deploy"/>


  <!-- Festlegung der class-Dateien der einzelnen Komponenten         -->

  <classfileset id="dispatcherClasses" dir="${build}">
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/dispatcher/**"/>
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/abstractproblems/*"/>
  </classfileset>

  <classfileset id="operativeClasses" dir="${build}">
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/operative/*"/>
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/abstractproblems/ContainerPartialSolution.class"/>
  </classfileset>

  <classfileset id="userClasses" dir="${build}">
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/user/*"/>
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/abstractproblems/*"/>
  </classfileset>

  <classfileset id="problemClasses" dir="${build}">
    <rootfileset dir="${build}"
                 includes="de/unistuttgart/architeuthis/testenvironment/**"
    />
  </classfileset>


  <!-- Compilierung der java-Dateien                                  -->

  <target name="compileDis">
    <mkdir dir="${build}"/>

    <javac srcdir="${source}"
           destdir="${build}"
           encoding="ISO-8859-1"
           includes="de/unistuttgart/architeuthis/dispatcher/**/*.java,
                     de/unistuttgart/architeuthis/abstractproblems/*.java,
                     de/unistuttgart/architeuthis/dispatcher/computemanaging/ComputeManagerImpl.java,
                     de/unistuttgart/architeuthis/dispatcher/problemmanaging/ProblemManagerImpl.java,
                     de/unistuttgart/architeuthis/operative/OperativeImpl.java,
                     de/unistuttgart/architeuthis/user/ProblemTransmitterImpl.java"
    />
  </target>

  <target name="compileOp">
    <mkdir dir="${build}"/>

    <javac srcdir="${source}"
           destdir="${build}"
           encoding="ISO-8859-1"
           includes="de/unistuttgart/architeuthis/operative/*.java,
                     de/unistuttgart/architeuthis/abstractproblems/ContainerPartialSolution.java,
                     de/unistuttgart/architeuthis/dispatcher/computemanaging/ComputeManagerImpl.java"
    />
  </target>

  <target name="compileUser">
    <mkdir dir="${build}"/>

    <javac srcdir="${source}"
           destdir="${build}"
           encoding="ISO-8859-1"
           includes="de/unistuttgart/architeuthis/user/*.java,
                     de/unistuttgart/architeuthis/abstractproblems/*.java,
                     de/unistuttgart/architeuthis/dispatcher/problemmanaging/ProblemManagerImpl.java"
    />
  </target>

  <target name="compileProbs">
    <mkdir dir="${build}"/>

    <javac srcdir="${source}"
           destdir="${build}"
           encoding="ISO-8859-1"
           includes="de/unistuttgart/architeuthis/testenvironment/**/*.java"
    />
  </target>

  <target name="compile">
    <mkdir dir="${build}"/>

    <javac srcdir="${source}"
           destdir="${build}"
           includes="de/**/*.java"
    />
  </target>


  <!-- Erzeugung der jar-Dateien                                      -->

  <target name="dispatcherJar" depends="compileDis"
    description="Erstellt die jar-Datei der User-Klassen">

    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/dispatcher/computemanaging/ComputeManagerImpl"/>
    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/dispatcher/problemmanaging/ProblemManagerImpl"/>
    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/operative/OperativeImpl"/>
    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/user/ProblemTransmitterImpl"/>

    <mkdir dir="${deploy}"/>

    <jar destfile="${deploy}/Dispatcher.jar"
         encoding="ISO-8859-1">
      <fileset refid="dispatcherClasses"/>
      <fileset dir="${build}"
               includes="de/unistuttgart/architeuthis/operative/OperativeImpl_Stub.class,
                         de/unistuttgart/architeuthis/user/ProblemTransmitterImpl_Stub.class"
      />
    </jar>
  </target>

  <target name="operativeJar" depends="compileOp"
    description="Erstellt die jar-Datei der Operative-Klassen">

    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/dispatcher/computemanaging/ComputeManagerImpl"/>
    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/operative/OperativeImpl"/>

    <mkdir dir="${deploy}"/>
                                                                                
    <jar destfile="${deploy}/Operative.jar"
         encoding="ISO-8859-1">
      <fileset refid="operativeClasses"/>
      <fileset dir="${build}"
               includes="de/unistuttgart/architeuthis/dispatcher/computemanaging/ComputeManagerImpl_Stub.class"/>
    </jar>
  </target>

  <target name="userJar" depends="compileUser"
    description="Erstellt die jar-Datei der User-Klassen">

    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/user/ProblemTransmitterImpl"/>
    <rmic base="${build}"
          stubversion="1.2"
          classname="de/unistuttgart/architeuthis/dispatcher/problemmanaging/ProblemManagerImpl"/>

    <mkdir dir="${deploy}"/>

    <jar destfile="${deploy}/User.jar"
         encoding="ISO-8859-1">
      <fileset refid="userClasses"/>
      <fileset dir="${build}"
               includes="de/unistuttgart/architeuthis/dispatcher/problemmanaging/ProblemManagerImpl_Stub.class"/>
    </jar>
  </target>

  <target name="problemsJar" depends="compileProbs"
    description="Erstellt die jar-Datei der Testproblem-Klassen">

    <mkdir dir="${deploy}"/>

    <jar destfile="${deploy}/Problems.jar"
         encoding="ISO-8859-1">
      <fileset refid="problemClasses"/>
    </jar>
  </target>

  <target name="sourceJar"
    description="Erstellt die jar-Datei der java-Source-Dateien">

    <mkdir dir="${deploy}"/>

    <jar destfile="${deploy}/Source.jar"
         encoding="ISO-8859-1"
         basedir="${source}"
         includes="de/**/*">
    </jar>
  </target>


  <!-- Erzeugung der tar-Dateien                                      -->

  <target name="dispatcherTar" depends="dispatcherJar"
    description="Erstellt die tar.gz-Datei der Dispatcher-Dateien">

    <tar destfile="${deploy}/dispatcher.tar.gz"
         compression="gzip">

      <tarfileset dir="${deploy}"
                  mode="644"
                  prefix="/dispatcher">
        <include name="Dispatcher.jar"/>
      </tarfileset>

      <tarfileset dir="${misc}"
                  mode="644"
                  prefix="/dispatcher">
        <include name="logging.properties"/>
      </tarfileset>

      <tarfileset dir="${policy}"
                  mode="644"
                  prefix="/dispatcher">
        <include name="dispatcher.pol"/>
      </tarfileset>

      <tarfileset dir="${readme}"
                  mode="644"
                  prefix="/dispatcher">
        <include name="Readme"/>
        <include name="ReadmeDispatcher"/>
      </tarfileset>

      <tarfileset dir="${runScripts}"
                  mode="755"
                  prefix="/dispatcher">
        <include name="setup.sh"/>
        <include name="runDispatcher.sh"/>
      </tarfileset>

    </tar>
  </target>

  <target name="operativeTar" depends="operativeJar"
    description="Erstellt die tar.gz-Datei der Operative-Dateien">

    <tar destfile="${deploy}/operative.tar.gz"
         compression="gzip">

      <tarfileset dir="${deploy}"
                  mode="644"
                  prefix="/operative">
        <include name="Operative.jar"/>
      </tarfileset>

      <tarfileset dir="${policy}"
                  mode="644"
                  prefix="/operative">
        <include name="operative.pol"/>
      </tarfileset>

      <tarfileset dir="${readme}"
                  mode="644"
                  prefix="/operative">
        <include name="Readme"/>
        <include name="ReadmeOperative"/>
        <include name="ReadmeGDM"/>
      </tarfileset>

      <tarfileset dir="${runScripts}"
                  mode="755"
                  prefix="/operative">
        <include name="setup.sh"/>
        <include name="runOperative.sh"/>
        <include name="background-prgs.sh"/>
      </tarfileset>

    </tar>
  </target>

  <target name="userTar" depends="userJar"
    description="Erstellt die tar.gz-Datei der User-Dateien">

    <tar destfile="${deploy}/userenvironment.tar.gz"
         compression="gzip">

      <tarfileset dir="${deploy}"
                  mode="644"
                  prefix="/user">
        <include name="User.jar"/>
      </tarfileset>

      <tarfileset dir="${policy}"
                  mode="644"
                  prefix="/user">
        <include name="transmitter.pol"/>
        <include name="statisticreader.pol"/>
      </tarfileset>

      <tarfileset dir="${readme}"
                  mode="644"
                  prefix="/user">
        <include name="Readme"/>
        <include name="ReadmeUserenvironment"/>
        <include name="ReadmeProblemTransmitterApp"/>
        <include name="ReadmeClassFileServer"/>
        <include name="ReadmeStatistics"/>
      </tarfileset>

      <tarfileset dir="${runScripts}"
                  mode="755"
                  prefix="/user">
        <include name="setup.sh"/>
        <include name="runClassFileServer.sh"/>
        <include name="runConsoleSysStat.sh"/>
        <include name="runGuiSysStat.sh"/>
      </tarfileset>

    </tar>
  </target>

  <target name="testsTar" depends="userJar, problemsJar"
    description="Erstellt die tar.gz-Datei der Test-Dateien">

    <tar destfile="${deploy}/testenvironment.tar.gz"
         compression="gzip">

      <tarfileset dir="${deploy}"
                  mode="644"
                  prefix="/testenvironment">
        <include name="User.jar"/>
      </tarfileset>

      <tarfileset dir="${deploy}"
                  mode="644"
                  prefix="/testenvironment">
        <include name="Problems.jar"/>
      </tarfileset>

      <tarfileset dir="${policy}"
                  mode="644"
                  prefix="/testenvironment">
        <include name="transmitter.pol"/>
        <include name="statisticreader.pol"/>
      </tarfileset>

      <tarfileset dir="${readme}"
                  mode="644"
                  prefix="/testenvironment">
        <include name="Readme"/>
        <include name="ReadmeTestenvironment"/>
        <include name="ReadmeProblemTransmitterApp"/>
        <include name="ReadmeClassFileServer"/>
        <include name="ReadmeStatistics"/>
      </tarfileset>

      <tarfileset dir="${runScripts}"
                  mode="755"
                  prefix="/testenvironment">
        <include name="setup.sh"/>
        <include name="runClassFileServer.sh"/>
        <include name="runConsoleSysStat.sh"/>
        <include name="runGuiSysStat.sh"/>
        <include name="runPrimeRange.sh"/>
        <include name="runSerializablePrimeRange.sh"/>
        <include name="runPrimeSequence.sh"/>
        <include name="runSerializablePrimeSequence.sh"/>
        <include name="runMonte.sh"/>
        <include name="runRandom.sh"/>
        <include name="runCaching.sh"/>
        <include name="runFail.sh"/>
      </tarfileset>

    </tar>
  </target>

  <target name="srcTar" depends="sourceJar"
    description="Erstellt tar.gz-Datei vom gesamten Source">

    <tar destfile="${deploy}/architeuthis_src.tar.gz"
         compression="gzip">

      <tarfileset dir="${deploy}"
                  mode="644">
        <include name="Source.jar"/>
      </tarfileset>

      <tarfileset dir="${policy}"
                  mode="644"
                  prefix="/policy">
        <include name="*"/>
      </tarfileset>

      <tarfileset dir="${runScripts}"
                  mode="644"
                  prefix="/runScripts">
        <include name="*"/>
      </tarfileset>

      <tarfileset dir="${readme}"
                  mode="644"
                  prefix="/readme">
        <include name="*"/>
      </tarfileset>

      <tarfileset dir="${manual}"
                  mode="644"
                  prefix="/manual">
        <include name="**"/>
      </tarfileset>

      <tarfileset dir="${misc}"
                  mode="644">
        <include name="logging.properties"/>
        <include name="change-log"/>
        <include name="todo"/>
        <include name="build.xml"/>
        <include name="gpl.txt"/>
      </tarfileset>

    </tar>
  </target>

  <target name="allTar" depends="dispatcherTar, operativeTar, userTar,
                                 testsTar, srcTar"
    description="Erstellt alle tar.gz-Dateien">
  </target>


  <!-- Weitere Ziele                                                  -->

  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${deploy}"/>
  </target>

  <target name="help">
    <echo message="Benutzung: ant ziel"/>
    <echo message="Moegliche Werte fuer ziel sind:"/>

    <echo message=""/>
    <echo message=" * compileDis    : Compiliert die Dispatcher-Dateien"/>
    <echo message=" * compileOp     : Compiliert die Operative-Dateien"/>
    <echo message=" * compileUser   : Compiliert die User-Dateien"/>
    <echo message=" * compileProbs  : Compiliert die Testproblem-Dateien"/>
    <echo message=" * compile       : Compiliert alle java-Dateien"/>

    <echo message=""/>
    <echo message=" * dispatcherJar : Erzeugt die jar-Datei zum Dispatcher"/>
    <echo message=" * operativeJar  : Erzeugt die jar-Datei zum Operative"/>
    <echo message=" * userJar       : Erzeugt die jar-Datei zu den User-Dateien"/>
    <echo message=" * problemsJar   : Erzeugt die jar-Datei zu den Testproblemen"/>
    <echo message=" * sourceJar     : Erzeugt die jar-Datei der java-Source-Dateien"/>

    <echo message=""/>
    <echo message=" * dispatcherTar : Erzeugt die tar.gz-Datei zum Dispatcher"/>
    <echo message=" * operativeTar  : Erzeugt die tar.gz-Datei zum Operative"/>
    <echo message=" * userTar       : Erzeugt die tar.gz-Datei zu den User-Dateien"/>
    <echo message=" * testsTar      : Erzeugt die tar.gz-Datei zu den Test-Dateien"/>
    <echo message=" * srcTar        : Erzeugt die tar.gz-Datei vom gesamten Source"/>
    <echo message=" * allTar        : Erzeugt alle tar.gz-Dateien"/>

    <echo message=""/>
    <echo message=" * clean         : Loescht alle von ant erzeugten Dateien"/>
    <echo message=" * help          : Gibt diesen Text zur Benutzung aus"/>

  </target>
</project>

